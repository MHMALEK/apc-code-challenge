image: docker:latest

services:
  - docker:dind

before_script:
  - apk --no-cache add curl

stages:
  - build
  - test
  - deploy

variables:
  CONTAINER_IMAGE: registry.gitlab.com/mhos.malek/apc-code-challenge
  BUILD_IMAGE: $CONTAINER_IMAGE:$CI_BUILD_REF_NAME
  HEROKU_REGISTORY: registry.heroku.com/apc-code-app/web
  HEROKU_APP: apc-code-app

build:
  stage: build
  tags:
    - docker
  script:
    - echo $CI_BUILD_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin registry.gitlab.com
    - docker build --no-cache -t $BUILD_IMAGE .
    - docker push $BUILD_IMAGE


test:
  stage: test
  image: node
  script:
    - echo "Testing App"
    - npm install
    - CI=true npm test:unit
    - echo "Test successfully!"


staging:
  type: deploy
  stage: staging
  tags:
    - docker
  only:
    - main
  script:
    - docker login --username=$HEROKU_USER_NAME --password=$HEROKU_API_KEY registry.heroku.com
    - echo $CI_BUILD_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin registry.gitlab.com
    - docker pull $BUILD_IMAGE
    - docker tag  $BUILD_IMAGE $HEROKU_REGISTORY
    - docker push $HEROKU_REGISTORY
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $HEROKU_APP

# I don't have other account for prod. just for smaple I put it here
production:
  type: deploy
  stage: production
  tags:
    - docker
  only:
    - tags
  script:
    - docker login --username=$HEROKU_USER_NAME --password=$HEROKU_API_KEY registry.heroku.com
    - echo $CI_BUILD_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin registry.gitlab.com
    - docker pull $BUILD_IMAGE
    - docker tag  $BUILD_IMAGE $HEROKU_REGISTORY
    - docker push $HEROKU_REGISTORY
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $HEROKU_APP
